#!/bin/bash

# Print program usage
usage() {
	echo "Usage: $0 <csv-dataset>"
}

# Output a column from the dataset
column() {
	if [[ $USING_HEADERS == 1 ]]; then
		tail -n+2 $FILE | awk -F $'\t' '{print $'$1'}'
	else
		cat $FILE | awk -F $'\t' '{print $'$1'}'
	fi
}

# Calculate a percentage total
#    $1 result
#    $2 total
perc() {
	echo "($1 / $2) * 100" | bc -l | xargs printf '%.2f\n'
}

# Output a result to temporary file
output() {
	echo -e "$@" >> $TMP
}

main() {
	# Whether the input dataset contains a header row
	USING_HEADERS=1

	# Our input dataset
	FILE="$1"

	# The dimensions of our dataset in rows and columns
	NO_COLUMNS=`head -n1 $FILE | sed 's/\t/\n/g' | head -n-1 | wc -l`
	NO_ROWS=`wc -l $FILE | awk '{print $1}'`

	# Temporary file used to store results
	TMP=/tmp/dsa.$(date +%s)

	if [[ $USING_HEADERS == 1 ]]; then
		NO_ROWS=$((NO_ROWS-1))
	fi

	if [[ -z "$1" ]]; then
		usage
		exit 1
	fi

	if [[ ! -f "$1" ]]; then
		echo "fatal: file '$1' not found!">&2
	fi

	echo -e "Dataset: '$FILE' ($NO_ROWS records)\n"

	rm -f $TMP
	touch $TMP

	# Output headers
	output "Row\tPopulated\t% \tUnique\t%  "

	for i in $(seq 1 $NO_COLUMNS); do

		if [[ $USING_HEADERS == 1 ]]; then
			COLUMN_NAME=`head -n1 $FILE | awk -F $'\t' '{print $'$i'}'`
		else
			COLUMN_NAME=$i
		fi

		NO_POPULATED=`column $i | sed '/^$/d' | wc -l`
		POPULATED_PERC=`perc $POPULATED $NO_ROWS`

		NO_UNIQUE=`column $i | sort -u | wc -l`
		UNIQUE_PERC=`perc $UNIQUE $NO_ROWS`

		output "$COLUMN_NAME\t$NO_POPULATED\t$POPULATED_PERC%\t$NO_UNIQUE\t$UNIQUE_PERC%"
	done

	if [[ "$2" == "-t" ]]; then
		column -t -s $'\t' $TMP
	else
		tablify $TMP
	fi

	# Cleanup temporary file
	rm -f $TMP
}
main $@
