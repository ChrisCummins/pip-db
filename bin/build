#!/usr/bin/env bash
#
# Builds a pip-db server. Designed for producing a minimal pip-db
# server, with no extra features. Note that this destructively removes
# files not needed for building after compilation. To preserve these,
# pass an argument, e.g. `./bin/build foo'.
#
set -e

# Temporary build files
BUILD_FILES="autom4te.cache/
build/
Documentation/
node_modules/
scripts/
test/
tools/"

indent() {
    sed -u 's/^/        /'
}

status() {
    echo "------> $@"
}

status "Running autogen.sh"
./autogen.sh 2>&1 | indent

status "Running configure"
./configure --disable-documentation \
    --disable-git-hooks \
    --disable-tools \
    --enable-minify-css \
    --enable-minify-js 2>&1 | indent

status "Running make"
make all 2>&1 | indent

status "Installing lein dependencies"
lein deps

test -n "$1" || {
    status "Minimising";
    for f in $BUILD_FILES; do
        echo "Removing \`$f'..." | indent;
        rm -rf $f;
    done;
}

status "Checking latest BLAST+ release version"

# Get the path of the latest release
ftp -n ftp.ncbi.nlm.nih.gov >index.tmp <<END_SCRIPT
quote USER anonymous
quote PASS
cd blast/executables/blast+/LATEST
ls
quit
END_SCRIPT

FILE=`grep "x64-linux.tar.gz" index.tmp | awk '{print $NF}'`
rm -f index.tmp

test -n "$FILE" || { echo "Failed to retrieve path!"; exit 1; }

if [ -f "$FILE" ]; then
    echo "Using cached file '$FILE'" | indent
else
    echo "Downloading '$FILE'..." | indent
    wget "ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/$FILE" | indent
fi

DIR=`echo "$FILE" | sed 's/-x64-linux\.tar\.gz//'`

status "Installing BLAST+ binaries"

if [ ! -d "$DIR" ]; then
    echo "Unpacking '$FILE'..." | indent
    tar zxvf "$FILE" | indent
fi

if [ -d blast ]; then
    rm -rf blast
fi

mv -v "$DIR" blast

echo "Removing unneeded BLAST+ binaries..." | indent
find blast/bin -type f | grep -E -v "(blastp|makeblastdb)" | xargs rm -fv | indent

echo "Installed BLAST+ in 'blast/'" | indent

# Add BLAST+ binaries to this script's PATH
PATH=`$pwd`/blast/bin:$PATH

status "Creating BLAST+ database"
mkdir -p blast/db
cd blast/db
makeblastdb -in ../../dataset.fsa -dbtype 'prot' -out pip-db | indent
cd ../..

test -n "$1" || {
    status "Tidying up"
    rm -v "$FILE" | indent;
}
